(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{356:function(i,t,a){"use strict";a.r(t);var n=a(43),s=Object(n.a)({},(function(){var i=this,t=i.$createElement,a=i._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[a("h4",{attrs:{id:"display-none、visibility-hidden、opacity-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#display-none、visibility-hidden、opacity-0"}},[i._v("#")]),i._v(" display: none、visibility: hidden、opacity: 0")]),i._v(" "),a("ul",[a("li",[i._v("display:none\n"),a("ul",[a("li",[i._v("不会占据位置, 原本的位置也会在页面布局中消失")])])]),i._v(" "),a("li",[i._v("visibility:hidden\n"),a("ul",[a("li",[i._v("该元素会隐藏, 但原本的位置不会在页面布局中消失")]),i._v(" "),a("li",[i._v("该元素身上如果有绑定事件也不会被触发")])])]),i._v(" "),a("li",[i._v("opacity: 0\n"),a("ul",[a("li",[i._v("只是把该元素的透明度设置为不可见,元素会隐藏,但原本的位置不会在页面布局中消失")]),i._v(" "),a("li",[i._v("该元素身上如果绑定事件点击会被触发")])])])]),i._v(" "),a("h4",{attrs:{id:"transition、animation、transform的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transition、animation、transform的区别"}},[i._v("#")]),i._v(" transition、animation、transform的区别")]),i._v(" "),a("ul",[a("li",[i._v("transition 只适用于单一的动画,其实质就是从一种效果逐渐变为另一种,需要通过事件来触发")]),i._v(" "),a("li",[i._v("animation 用于复杂的动画,自己触发")]),i._v(" "),a("li",[i._v("transform 用来改变元素的旋转、缩放、移动、倾斜等")])]),i._v(" "),a("h4",{attrs:{id:"css优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css优先级"}},[i._v("#")]),i._v(" CSS优先级")]),i._v(" "),a("ul",[a("li",[i._v("不同级别：!important > 行内样式 > ID选择器 > 类选择器 > 标签 > 通配符 > 继承 > 浏览器默认属性")]),i._v(" "),a("li",[i._v("同一级别: 同一级别中后写的会覆盖先写的样式")])]),i._v(" "),a("h4",{attrs:{id:"flex布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex布局"}},[i._v("#")]),i._v(" flex布局")]),i._v(" "),a("ul",[a("li",[i._v("首先要设置父元素display: flex; justify-content: center;可以实现水平居中,align-items: center; 可以实现垂直居中")])])])}),[],!1,null,null,null);t.default=s.exports}}]);